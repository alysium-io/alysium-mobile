version: 2.1
orbs:
  rn: react-native-community/react-native@7.1.1
commands:
  write-app-env-vars:
    description: "Write environment variables to .env.* file"
    parameters:
      envtype:
        type: string
      API_URL:
        type: env_var_name
      ENV:
        type: env_var_name
    steps:
      - run:
          name: Write environment variables to .env.* file
          command: |
            echo "API_URL=${<< parameters.API_URL >>}" >> .env.<< parameters.envtype >>
            echo "ENV=${<< parameters.ENV >>}" >> .env.<< parameters.envtype >>
  write-android-credentials:
    description: "Write Android credentials"
    steps:
      - run:
          name: Write Android signing keys to gradle.properties
          command: |
            mkdir ~/.gradle
            touch ~/.gradle/gradle.properties
            echo "ALYSIUM_UPLOAD_STORE_FILE=${ALYSIUM_UPLOAD_STORE_FILE}" >> ~/.gradle/gradle.properties
            echo "ALYSIUM_UPLOAD_STORE_PASSWORD=${ALYSIUM_UPLOAD_STORE_PASSWORD}" >> ~/.gradle/gradle.properties
            echo "ALYSIUM_UPLOAD_KEY_ALIAS=${ALYSIUM_UPLOAD_KEY_ALIAS}" >> ~/.gradle/gradle.properties
            echo "ALYSIUM_UPLOAD_KEY_PASSWORD=${ALYSIUM_UPLOAD_KEY_PASSWORD}" >> ~/.gradle/gradle.properties
      - run:
          name: Write Android Keystore
          command: echo $ANDROID_ENCRYPTED_KEYSTORE | base64 --decode > ./android/app/alysium.keystore
      - run:
          name: Write Google Play Upload Key Credentials
          command: echo $GOOGLE_PLAY_SERVICE_KEY | base64 --decode > /tmp/google-play-credentials.json
  show-diff:
    description: "Show git diff"
    steps:
      - run:
          name: Show git diff
          command: git --no-pager diff -p
  git-config:
    description: "Configure Git"
    steps:
      - run:
          name: Set Git user information
          command: |
            git config --global user.name "CircleCI Server"
            git config --global user.email "noreply@circleci.com"
      - run:
          name: Set auto deploy
          command: |
            git config --global push.default current
  jest:
    description: "Run Jest Tests"
    steps:
      - run:
          name: Run Jest Tests
          command: yarn test
  install-gem-bundler:
    description: "Install Gem Bundler"
    steps:
      - run:
          name: Bundle Install React Native
          command: bundle install
  add-repo-fingerprint:
    description: "Add repo fingerprint to known_hosts"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:b8:a0:d7:36:74:6a:84:ff:5d:6d:92:08:d7:9f:87"
  add-match-fingerprint:
    description: "Add match fingerprint to known_hosts"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ef:57:ec:e0:ba:a5:c7:cf:37:54:b1:9e:b1:bf:a8:b6"
  add-gitlab-to-known-hosts:
    description: "Add GitLab to SSH known hosts"
    steps:
      - run:
          name: Add GitLab to SSH known hosts
          command: ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
  bump-build-number:
    description: "Bump Build Number"
    steps:
      - run:
          name: Bump Build
          command: yarn bump-build-and-skip-ci
      - run:
          name: Push Build Commit
          command: git push
  install-pods:
    description: "Install Pods"
    steps:
      - restore_cache:
          keys:
            - pod-deps-{{ checksum "ios/Podfile.lock" }}
            - pod-deps-
      - run:
          name: Install using specific CocoaPods version
          command: bundle exec pod install
          working_directory: ios
      - save_cache:
          paths:
            - ios/Pods
          key: pod-deps-{{ checksum "ios/Podfile.lock" }}
  check-versions:
    description: "Check versions"
    steps:
      - run:
          name: Check bundler version
          command: bundle -v
      - run:
          name: Check Ruby version
          command: ruby -v
      - run:
          name: Check to see if rbenv is installed
          command: rbenv versions
  install-and-switch-to-ruby:
    description: "Install and switch to Ruby 3.0.2"
    steps:
      - restore_cache:
          keys:
            - v1-rbenv-versions-{{ checksum ".ruby-version" }}
            - v1-rbenv-versions-
      - run:
          name: Install and switch to Ruby
          command: |
            rbenv install 3.0.2 -s
            rbenv local 3.0.2
      - save_cache:
          key: v1-rbenv-versions-{{ checksum ".ruby-version" }}
          paths:
            - ~/.rbenv/versions

jobs:

  # Set up environments
  env_setup:
    docker:
      - image: cimg/node:21.4.0
    steps:
      - checkout
      - add-repo-fingerprint
      - git-config
      - write-app-env-vars:
          envtype: staging
          API_URL: API_URL_STAGING
          ENV: ENV_STAGING
      - rn/yarn_install
      - jest
      - show-diff
      - bump-build-number
      - persist_to_workspace:
          root: .
          paths: .
  env_setup_nobump:
    docker:
      - image: cimg/node:21.4.0
    steps:
      - checkout
      - add-repo-fingerprint
      - git-config
      - write-app-env-vars:
          envtype: staging
          API_URL: API_URL_STAGING
          ENV: ENV_STAGING
      - rn/yarn_install
      - jest
      - show-diff
      - persist_to_workspace:
          root: .
          paths: .
  
  # Deploy to TestFlight
  build_android_staging:
    docker:
      - image: cimg/android:2023.07-node
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - attach_workspace:
          at: .
      - write-android-credentials
      - install-gem-bundler
      - run:
          name: Deploy with fastlane
          command: bundle exec fastlane android internal_beta
          working_directory: fastlane
      - store_artifacts:
          path: output
  build_ios_staging:
    executor:
      name: rn/macos
      xcode_version: 15.1.0
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - attach_workspace:
          at: .
      - install-and-switch-to-ruby
      - add-gitlab-to-known-hosts
      - add-match-fingerprint
      - install-gem-bundler
      - install-pods
      - show-diff
      - run:
          name: Deploy with fastlane
          command: bundle exec fastlane ios internal_beta
          working_directory: fastlane
      - store_artifacts:
          path: output

  # Test Build
  build_android:
    docker:
      - image: cimg/android:2023.07-node
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - attach_workspace:
          at: .
      - write-android-credentials
      - install-gem-bundler
      - run:
          name: Deploy with fastlane
          command: bundle exec fastlane android test_build
          working_directory: fastlane
      - store_artifacts:
          path: output
  build_ios:
    executor:
      name: rn/macos
      xcode_version: 15.1.0
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - attach_workspace:
          at: .
      - install-and-switch-to-ruby
      - add-gitlab-to-known-hosts
      - add-match-fingerprint
      - install-gem-bundler
      - install-pods
      - show-diff
      - run:
          name: Deploy with fastlane
          command: bundle exec fastlane ios test_build
          working_directory: fastlane
      - store_artifacts:
          path: output

workflows:
  deploy_staging:
    jobs:
      - env_setup:
          filters:
            branches:
              only:
                - testflight
                - master
      - build_ios_staging:
          filters:
            branches:
              only:
                - testflight
                - master
          requires:
            - env_setup
      - build_android_staging:
          filters:
            branches:
              only:
                - testflight
                - master
          requires:
            - env_setup
            
  test_build:
    jobs:
      - env_setup_nobump:
          filters:
            branches:
              only:
                - /^feature\//
      - build_android:
          filters:
            branches:
              only:
                - /^feature\//
          requires:
            - env_setup_nobump
      - build_ios:
          filters:
            branches:
              only:
                - /^feature\//
          requires:
            - env_setup_nobump

