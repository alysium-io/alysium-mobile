require_relative '../tools/get-changelog-notes'
require_relative '../tools/prepare-android-changelog'
require_relative '../tools/utils'

android_metadata_path = './fastlane/metadata/android'
version_code = get_current_build_number_from_package_json

lane :test_lane do
    # Use this lane to test your Fastfile without uploading to App Store Connect
    # Be sure to delete whatever you're testing here before committing tho... >_>
    puts 'Test lane'

    match(
        type: 'appstore'
    )
end

platform :ios do

    lane :test_build do

        # Configure circleci
        setup_circle_ci

        # Make sure match is set up correctly for the testflight deployment
        match(
            type: 'appstore',
            readonly: true
        )

        # Build
        gym(
            scheme: 'alysium-staging',
            export_method: 'app-store',
            workspace: './ios/alysium.xcworkspace',
            output_directory: './ios/build',
            output_name: 'alysium-staging.ipa'
        )

        # Appstoreconnect API key for pilot to upload to TestFlight
        api_key = app_store_connect_api_key(
            key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
            issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
            key_content: Base64.decode64(ENV['APP_STORE_CONNECT_API_KEY_CONTENT'])
        )

        # Get the latest changelog
        changelog = get_latest_changelog

    end

    # Build and ship to testflight
    lane :internal_beta do

        # Configure circleci
        setup_circle_ci

        # Make sure match is set up correctly for the testflight deployment
        match(
            type: 'appstore',
            readonly: true
        )

        # Build
        gym(
            scheme: 'alysium-staging',
            export_method: 'app-store',
            workspace: './ios/alysium.xcworkspace',
            output_directory: './ios/build',
            output_name: 'alysium-staging.ipa'
        )

        # Appstoreconnect API key for pilot to upload to TestFlight
        api_key = app_store_connect_api_key(
            key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
            issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
            key_content: Base64.decode64(ENV['APP_STORE_CONNECT_API_KEY_CONTENT'])
        )

        # Get the latest changelog
        changelog = get_latest_changelog

        # Upload to TestFlight
        pilot(
            skip_submission: true,
            skip_waiting_for_build_processing: true,
            username: 'aymather@gmail.com',
            app_identifier: 'io.alysium',
            distribute_external: true,
            changelog: changelog,
            beta_app_feedback_email: 'aymather@gmail.com',
            beta_app_description: 'Alysium Beta: Build Live Music Business',
            groups: ['memyselfandi']
        )

    end

end

platform :android do

    lane :test_build do

        ENV['ENVFILE'] = '.env.staging'

        prepare_android_changelog

        gradle(
            task: 'clean',
            project_dir: './android',
            gradle_path: './gradlew'
        )

        gradle(
            task: 'bundle',
            project_dir: './android',
            gradle_path: './gradlew',
            flavor: 'staging',
            build_type: 'Release'
        )

    end

    lane :internal_beta do

        ENV['ENVFILE'] = '.env.staging'

        prepare_android_changelog

        gradle(
            task: 'clean',
            project_dir: './android',
            gradle_path: './gradlew'
        )

        gradle(
            task: 'bundle',
            project_dir: './android',
            gradle_path: './gradlew',
            flavor: 'staging',
            build_type: 'Release'
        )

        upload_to_play_store(
            track: 'internal',
            aab: './android/app/build/outputs/bundle/stagingRelease/app-staging-release.aab',
            metadata_path: android_metadata_path,
            version_code: version_code,

            # AVAILABLE OPTIONS
            #
            # package_name,
            # version_name,
            # version_code,
            # release_status,
            # track,
            # rollout,
            # metadata_path,
            # key,
            # issuer,
            # json_key,
            # json_key_data,
            # apk,
            # apk_paths,
            # aab,
            # aab_paths,
            # skip_upload_apk,
            # skip_upload_aab,
            # skip_upload_metadata,
            # skip_upload_changelogs,
            # skip_upload_images,
            # skip_upload_screenshots,
            # track_promote_to,
            # track_promote_release_status,
            # validate_only,
            # mapping,
            # mapping_paths,
            # root_url,
            # check_superseded_tracks,
            # timeout,
            # deactivate_on_promote,
            # version_codes_to_retain,
            # changes_not_sent_for_review,
            # rescue_changes_not_sent_for_review,
            # in_app_update_priority,
            # obb_main_references_version,
            # obb_main_file_size,
            # obb_patch_references_version,
            # obb_patch_file_size,
            # ack_bundle_installation_warning
        )

    end

end

