require_relative '../tools/get-changelog-notes'
require_relative '../tools/prepare-android-changelog'
require_relative '../tools/utils'

android_metadata_path = './fastlane/metadata/android'
version_code = get_current_build_number_from_package_json

lane :test_lane do
    # Use this lane to test your Fastfile
    # Be sure to delete whatever you're testing here before committing tho... >_>
    puts 'Test lane'
end

platform :ios do

    lane :build do |options|
        # This lane builds the app and uploads it to TestFlight
        # @param options[:scheme] The scheme to build
        # @param options[:app_identifier] The app identifier

        # Configure ci environment
        # You will run into this error if you don't set up the CI environment:
        #   Missing password for user example@gmail.com, and running in non-interactive shell
        # Basically this command sets up the keychain for the CI environment
        setup_ci

        # Make sure match is set up correctly for the testflight deployment
        match(
            type: 'appstore',
            readonly: true,
            clone_branch_directly: true,
            app_identifier: options[:app_identifier]
        )

        # Build
        gym(
            scheme: options[:scheme],
            export_method: 'app-store',
            workspace: './ios/alysium.xcworkspace',
            xcconfig: './CustomIOSBuild.xcconfig',
            output_directory: './ios/build',
            output_name: options[:scheme] + '.ipa',
            silent: true,
            export_xcargs: '-jobs $(sysctl -n hw.ncpu)'
        )
    end

    # Build and ship to testflight
    lane :deploy do |options|
        # This lane uploads the artifact to TestFlight
        # @param options[:ipa_filename] The path to the IPA file to upload
        # @param options[:app_identifier] The app identifier

        # Appstoreconnect API key for pilot to upload to TestFlight
        api_key = app_store_connect_api_key(
            key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
            issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
            key_content: Base64.decode64(ENV['APP_STORE_CONNECT_API_KEY_CONTENT'])
        )

        # Get the latest changelog
        changelog = get_latest_changelog

        # Upload to TestFlight
        pilot(
            ipa: './ios/build' + options[:ipa_filename],
            skip_submission: true,
            skip_waiting_for_build_processing: true,
            username: 'aymather@gmail.com',
            app_identifier: options[:app_identifier],
            distribute_external: false,
            changelog: changelog,
            beta_app_feedback_email: 'aymather@gmail.com',
            beta_app_description: 'Alysium Beta: Build Live Music Business',
            groups: []
        )
    end

end

platform :android do

    lane :build do |options|
        # This lane builds the app
        # @param options[:env] The environment to build for

        ENV['ENVFILE'] = '.env.' + options[:env]

        prepare_android_changelog

        gradle(
            task: 'clean',
            project_dir: './android',
            gradle_path: './gradlew'
        )

        gradle(
            task: 'bundle',
            project_dir: './android',
            gradle_path: './gradlew',
            flavor: options[:env],
            build_type: 'Release'
        )
    end

    lane :deploy do |options|
        # This lane uploads the artifact to TestFlight
        # @param options[:env] The flavor to upload

        upload_to_play_store(
            track: 'internal',
            aab: "./android/app/build/outputs/bundle/#{options[:env]}Release/app-#{options[:env]}-release.aab",
            metadata_path: android_metadata_path,
            version_code: version_code
        )
    end
end

