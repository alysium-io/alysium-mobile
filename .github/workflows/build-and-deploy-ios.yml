name: Alysium Build & Deploy iOS

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - qa
          - demo
      deploy:
        description: 'Whether to deploy the build'
        required: false
        type: boolean
        default: false
      save:
        description: 'Whether to save the build as an artifact'
        required: false
        type: boolean
        default: false

jobs:
  build-and-deploy:
    runs-on: macos-13

    steps:
    
    # Init
    - name: Checkout the repository # repo
      uses: actions/checkout@v4

    # Build number
    - name: Build Number
      uses: ./.github/actions/build-number
      with:
          current-build-number: ${{ vars.CURRENT_BUILD_NUMBER }}
          gh-pat: ${{ secrets.GH_PAT }}
          repo-owner: alysium-io
          repo-name: alysium-mobile
    
    # Environment configuration
    - name: Set up Xcode # xcode 15.1.0
      uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: '15.1.0'
    - name: Use Node.js # node 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Set up Ruby # ruby 3.0.2
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0.2'
    - name: Install yarn dependencies # yarn
      uses: ./.github/actions/yarn
    - name: Install gem dependencies # gems
      uses: ./.github/actions/gems
    - name: Install pods # cocoapods
      uses: ./.github/actions/pods

    # iOS specific configuration
    - name: Write .env file
      uses: ./.github/actions/write-env-vars
      with:
        ENV: ${{ github.event.inputs.env }}
    - name: Generate CustomIOSBuild.xcconfig for build number
      run: echo "CURRENT_BUILD_NUMBER=$BUILD_NUMBER" >> CustomIOSBuild.xcconfig
    - name: Configure SSH # match deploy key
      uses: ./.github/actions/ssh-config
      with:
        match_deploy_key: ${{ secrets.MATCH_DEPLOY_KEY }}

    # Build iOS
    - name: Build iOS # fastlane
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
      run: bundle exec fastlane ios build app_identifier:"io.alysium.${{ github.event.inputs.env }}" scheme:"alysium-${{ github.event.inputs.env }}"
      working-directory: fastlane

    # Save the .ipa artifact
    - name: Upload .ipa artifact
      if: ${{ github.event.inputs.save == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: Alysium iOS
        path: ios/build/alysium-${{ github.event.inputs.env }}.ipa
        retention-days: 1

    # Deploy iOS
    - name: Deploy iOS
      if: ${{ github.event.inputs.deploy == 'true' }}
      env:
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
      run: bundle exec fastlane ios deploy app_identifier:"io.alysium.${{ github.event.inputs.env }}" ipa_filename:"alysium-${{ github.event.inputs.env }}.ipa"
      working-directory: fastlane