name: Alysium Mobile Testflight

on:
  push:
    branches:
      - workflow

jobs:
  build:
    runs-on: macos-13

    steps:

    # Set up Xcode
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: '15.1.0'
    
    # Init
    - name: Checkout the repository
      uses: actions/checkout@v4

    # Set up Node.js
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    # Set up Ruby
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0.2'

    # # Set up Java/NDK/SDK
    # - name: Set up JDK 17
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: 17
    #     distribution: 'temurin'
    # - name: Cache Android SDK and NDK
    #   id: cache-android
    #   uses: actions/cache@v4
    #   with:
    #     path: |
    #       /Users/runner/Library/Android/sdk/build-tools/33.0.0
    #       /Users/runner/Library/Android/sdk/platforms/android-33
    #       /Users/runner/Library/Android/sdk/ndk/23.1.7779620
    #     key: ${{ runner.os }}-android-sdk-33-ndk-23.1.7779620
    # - name: Set up Android SDK
    #   uses: android-actions/setup-android@v3
    # - name: Install Android Build Tools and SDKs
    #   if: steps.cache-android.outputs.cache-hit != 'true'
    #   run: |
    #     yes | sdkmanager "build-tools;33.0.0" "platforms;android-33" "ndk;23.1.7779620"

    # Install yarn
    - name: Cache Yarn dependencies
      uses: actions/cache@v4
      id: cache-yarn
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Install Yarn dependencies
      if: steps.cache-yarn.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    # Install gems
    - name: Cache Ruby dependencies
      uses: actions/cache@v4
      id: cache-ruby
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-ruby-${{ hashFiles('**/Gemfile.lock') }}
    - name: Install ruby dependencies
      if: steps.cache-ruby.outputs.cache-hit != 'true'
      run: bundle install

    # Install pods
    - name: Cache CocoaPods dependencies
      uses: actions/cache@v4
      id: cache-cocoapods
      with:
        path: ios/Pods
        key: ${{ runner.os }}-cocoapods-${{ hashFiles('ios/Podfile.lock') }}
    - name: Install CocoaPods dependencies
      if: steps.cache-cocoapods.outputs.cache-hit != 'true'
      run: bundle exec pod install
      working-directory: ios

    # Set up SSH key for match repository
    - name: Set up SSH key for match
      run: |
        mkdir -p /Users/runner/.ssh
        echo "${{ secrets.MATCH_DEPLOY_KEY }}" > /Users/runner/.ssh/alysium_match
        chmod 600 /Users/runner/.ssh/alysium_match
        ssh-keyscan github.com >> /Users/runner/.ssh/known_hosts
        echo -e "Host github.com\n  IdentityFile /Users/runner/.ssh/alysium_match\n  IdentitiesOnly yes" > /Users/runner/.ssh/config

    # Build iOS
    - name: Build iOS
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
      run: bundle exec fastlane ios test_build
      working-directory: fastlane
